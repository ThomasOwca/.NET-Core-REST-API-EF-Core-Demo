// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecordAPI.Data;

namespace RecordAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190612034138_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RecordAPI.Models.Domain_Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("ID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("RecordAPI.Models.Domain_Models.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommentID");

                    b.Property<DateTime>("DateTimeCreated");

                    b.Property<DateTime>("LastTimeCreated");

                    b.Property<string>("Owner");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CommentID");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("RecordAPI.Models.Domain_Models.Record", b =>
                {
                    b.HasOne("RecordAPI.Models.Domain_Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentID");
                });
#pragma warning restore 612, 618
        }
    }
}
